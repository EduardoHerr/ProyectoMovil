//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ProyectoMovil.com.somee.proyectomovil22 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://tempuri.org/")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback IngresarOperationCompleted;
        
        private System.Threading.SendOrPostCallback registrarProductoOperationCompleted;
        
        private System.Threading.SendOrPostCallback modificarProductoOperationCompleted;
        
        private System.Threading.SendOrPostCallback eliminarProductoOperationCompleted;
        
        private System.Threading.SendOrPostCallback registrarCategoriaOperationCompleted;
        
        private System.Threading.SendOrPostCallback actualizarCategoriaOperationCompleted;
        
        private System.Threading.SendOrPostCallback eliminarCategoriaOperationCompleted;
        
        private System.Threading.SendOrPostCallback registrarProveedorOperationCompleted;
        
        private System.Threading.SendOrPostCallback actualizarProveedorOperationCompleted;
        
        private System.Threading.SendOrPostCallback eliminarProveedorOperationCompleted;
        
        private System.Threading.SendOrPostCallback eliminarventaOperationCompleted;
        
        private System.Threading.SendOrPostCallback eliminarcompraOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegistrarUsuarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback actualizarClienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback eliminarUsuarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback cargarDatosUsuarioOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = "http://proyectomovil22.somee.com/WebService1.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event IngresarCompletedEventHandler IngresarCompleted;
        
        /// <remarks/>
        public event registrarProductoCompletedEventHandler registrarProductoCompleted;
        
        /// <remarks/>
        public event modificarProductoCompletedEventHandler modificarProductoCompleted;
        
        /// <remarks/>
        public event eliminarProductoCompletedEventHandler eliminarProductoCompleted;
        
        /// <remarks/>
        public event registrarCategoriaCompletedEventHandler registrarCategoriaCompleted;
        
        /// <remarks/>
        public event actualizarCategoriaCompletedEventHandler actualizarCategoriaCompleted;
        
        /// <remarks/>
        public event eliminarCategoriaCompletedEventHandler eliminarCategoriaCompleted;
        
        /// <remarks/>
        public event registrarProveedorCompletedEventHandler registrarProveedorCompleted;
        
        /// <remarks/>
        public event actualizarProveedorCompletedEventHandler actualizarProveedorCompleted;
        
        /// <remarks/>
        public event eliminarProveedorCompletedEventHandler eliminarProveedorCompleted;
        
        /// <remarks/>
        public event eliminarventaCompletedEventHandler eliminarventaCompleted;
        
        /// <remarks/>
        public event eliminarcompraCompletedEventHandler eliminarcompraCompleted;
        
        /// <remarks/>
        public event RegistrarUsuarioCompletedEventHandler RegistrarUsuarioCompleted;
        
        /// <remarks/>
        public event actualizarClienteCompletedEventHandler actualizarClienteCompleted;
        
        /// <remarks/>
        public event eliminarUsuarioCompletedEventHandler eliminarUsuarioCompleted;
        
        /// <remarks/>
        public event cargarDatosUsuarioCompletedEventHandler cargarDatosUsuarioCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ingresar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Ingresar(string user, string pwd) {
            object[] results = this.Invoke("Ingresar", new object[] {
                        user,
                        pwd});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void IngresarAsync(string user, string pwd) {
            this.IngresarAsync(user, pwd, null);
        }
        
        /// <remarks/>
        public void IngresarAsync(string user, string pwd, object userState) {
            if ((this.IngresarOperationCompleted == null)) {
                this.IngresarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIngresarOperationCompleted);
            }
            this.InvokeAsync("Ingresar", new object[] {
                        user,
                        pwd}, this.IngresarOperationCompleted, userState);
        }
        
        private void OnIngresarOperationCompleted(object arg) {
            if ((this.IngresarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IngresarCompleted(this, new IngresarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/registrarProducto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void registrarProducto(int idcategoria, string codigo, string nombre, string descripcion, string fechaelab, string fechaexp, int cantidad, string estado) {
            this.Invoke("registrarProducto", new object[] {
                        idcategoria,
                        codigo,
                        nombre,
                        descripcion,
                        fechaelab,
                        fechaexp,
                        cantidad,
                        estado});
        }
        
        /// <remarks/>
        public void registrarProductoAsync(int idcategoria, string codigo, string nombre, string descripcion, string fechaelab, string fechaexp, int cantidad, string estado) {
            this.registrarProductoAsync(idcategoria, codigo, nombre, descripcion, fechaelab, fechaexp, cantidad, estado, null);
        }
        
        /// <remarks/>
        public void registrarProductoAsync(int idcategoria, string codigo, string nombre, string descripcion, string fechaelab, string fechaexp, int cantidad, string estado, object userState) {
            if ((this.registrarProductoOperationCompleted == null)) {
                this.registrarProductoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregistrarProductoOperationCompleted);
            }
            this.InvokeAsync("registrarProducto", new object[] {
                        idcategoria,
                        codigo,
                        nombre,
                        descripcion,
                        fechaelab,
                        fechaexp,
                        cantidad,
                        estado}, this.registrarProductoOperationCompleted, userState);
        }
        
        private void OnregistrarProductoOperationCompleted(object arg) {
            if ((this.registrarProductoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registrarProductoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/modificarProducto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void modificarProducto(int id, string codigo, string nombre, string descripcion, string fechaelab, string fechaexp, int cantidad, string estado) {
            this.Invoke("modificarProducto", new object[] {
                        id,
                        codigo,
                        nombre,
                        descripcion,
                        fechaelab,
                        fechaexp,
                        cantidad,
                        estado});
        }
        
        /// <remarks/>
        public void modificarProductoAsync(int id, string codigo, string nombre, string descripcion, string fechaelab, string fechaexp, int cantidad, string estado) {
            this.modificarProductoAsync(id, codigo, nombre, descripcion, fechaelab, fechaexp, cantidad, estado, null);
        }
        
        /// <remarks/>
        public void modificarProductoAsync(int id, string codigo, string nombre, string descripcion, string fechaelab, string fechaexp, int cantidad, string estado, object userState) {
            if ((this.modificarProductoOperationCompleted == null)) {
                this.modificarProductoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodificarProductoOperationCompleted);
            }
            this.InvokeAsync("modificarProducto", new object[] {
                        id,
                        codigo,
                        nombre,
                        descripcion,
                        fechaelab,
                        fechaexp,
                        cantidad,
                        estado}, this.modificarProductoOperationCompleted, userState);
        }
        
        private void OnmodificarProductoOperationCompleted(object arg) {
            if ((this.modificarProductoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modificarProductoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eliminarProducto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void eliminarProducto(string id) {
            this.Invoke("eliminarProducto", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void eliminarProductoAsync(string id) {
            this.eliminarProductoAsync(id, null);
        }
        
        /// <remarks/>
        public void eliminarProductoAsync(string id, object userState) {
            if ((this.eliminarProductoOperationCompleted == null)) {
                this.eliminarProductoOperationCompleted = new System.Threading.SendOrPostCallback(this.OneliminarProductoOperationCompleted);
            }
            this.InvokeAsync("eliminarProducto", new object[] {
                        id}, this.eliminarProductoOperationCompleted, userState);
        }
        
        private void OneliminarProductoOperationCompleted(object arg) {
            if ((this.eliminarProductoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.eliminarProductoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/registrarCategoria", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void registrarCategoria(string tipo, string descripcion) {
            this.Invoke("registrarCategoria", new object[] {
                        tipo,
                        descripcion});
        }
        
        /// <remarks/>
        public void registrarCategoriaAsync(string tipo, string descripcion) {
            this.registrarCategoriaAsync(tipo, descripcion, null);
        }
        
        /// <remarks/>
        public void registrarCategoriaAsync(string tipo, string descripcion, object userState) {
            if ((this.registrarCategoriaOperationCompleted == null)) {
                this.registrarCategoriaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregistrarCategoriaOperationCompleted);
            }
            this.InvokeAsync("registrarCategoria", new object[] {
                        tipo,
                        descripcion}, this.registrarCategoriaOperationCompleted, userState);
        }
        
        private void OnregistrarCategoriaOperationCompleted(object arg) {
            if ((this.registrarCategoriaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registrarCategoriaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/actualizarCategoria", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void actualizarCategoria(int id, string tipo, string descripcion) {
            this.Invoke("actualizarCategoria", new object[] {
                        id,
                        tipo,
                        descripcion});
        }
        
        /// <remarks/>
        public void actualizarCategoriaAsync(int id, string tipo, string descripcion) {
            this.actualizarCategoriaAsync(id, tipo, descripcion, null);
        }
        
        /// <remarks/>
        public void actualizarCategoriaAsync(int id, string tipo, string descripcion, object userState) {
            if ((this.actualizarCategoriaOperationCompleted == null)) {
                this.actualizarCategoriaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactualizarCategoriaOperationCompleted);
            }
            this.InvokeAsync("actualizarCategoria", new object[] {
                        id,
                        tipo,
                        descripcion}, this.actualizarCategoriaOperationCompleted, userState);
        }
        
        private void OnactualizarCategoriaOperationCompleted(object arg) {
            if ((this.actualizarCategoriaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.actualizarCategoriaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eliminarCategoria", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void eliminarCategoria(int idcategoria) {
            this.Invoke("eliminarCategoria", new object[] {
                        idcategoria});
        }
        
        /// <remarks/>
        public void eliminarCategoriaAsync(int idcategoria) {
            this.eliminarCategoriaAsync(idcategoria, null);
        }
        
        /// <remarks/>
        public void eliminarCategoriaAsync(int idcategoria, object userState) {
            if ((this.eliminarCategoriaOperationCompleted == null)) {
                this.eliminarCategoriaOperationCompleted = new System.Threading.SendOrPostCallback(this.OneliminarCategoriaOperationCompleted);
            }
            this.InvokeAsync("eliminarCategoria", new object[] {
                        idcategoria}, this.eliminarCategoriaOperationCompleted, userState);
        }
        
        private void OneliminarCategoriaOperationCompleted(object arg) {
            if ((this.eliminarCategoriaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.eliminarCategoriaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/registrarProveedor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void registrarProveedor(string nombre, string ruc, string direccion, string telefono, string correo) {
            this.Invoke("registrarProveedor", new object[] {
                        nombre,
                        ruc,
                        direccion,
                        telefono,
                        correo});
        }
        
        /// <remarks/>
        public void registrarProveedorAsync(string nombre, string ruc, string direccion, string telefono, string correo) {
            this.registrarProveedorAsync(nombre, ruc, direccion, telefono, correo, null);
        }
        
        /// <remarks/>
        public void registrarProveedorAsync(string nombre, string ruc, string direccion, string telefono, string correo, object userState) {
            if ((this.registrarProveedorOperationCompleted == null)) {
                this.registrarProveedorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregistrarProveedorOperationCompleted);
            }
            this.InvokeAsync("registrarProveedor", new object[] {
                        nombre,
                        ruc,
                        direccion,
                        telefono,
                        correo}, this.registrarProveedorOperationCompleted, userState);
        }
        
        private void OnregistrarProveedorOperationCompleted(object arg) {
            if ((this.registrarProveedorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registrarProveedorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/actualizarProveedor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void actualizarProveedor(int id, string nombre, string ruc, string direccion, string telefono, string correo) {
            this.Invoke("actualizarProveedor", new object[] {
                        id,
                        nombre,
                        ruc,
                        direccion,
                        telefono,
                        correo});
        }
        
        /// <remarks/>
        public void actualizarProveedorAsync(int id, string nombre, string ruc, string direccion, string telefono, string correo) {
            this.actualizarProveedorAsync(id, nombre, ruc, direccion, telefono, correo, null);
        }
        
        /// <remarks/>
        public void actualizarProveedorAsync(int id, string nombre, string ruc, string direccion, string telefono, string correo, object userState) {
            if ((this.actualizarProveedorOperationCompleted == null)) {
                this.actualizarProveedorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactualizarProveedorOperationCompleted);
            }
            this.InvokeAsync("actualizarProveedor", new object[] {
                        id,
                        nombre,
                        ruc,
                        direccion,
                        telefono,
                        correo}, this.actualizarProveedorOperationCompleted, userState);
        }
        
        private void OnactualizarProveedorOperationCompleted(object arg) {
            if ((this.actualizarProveedorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.actualizarProveedorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eliminarProveedor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void eliminarProveedor(int id) {
            this.Invoke("eliminarProveedor", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void eliminarProveedorAsync(int id) {
            this.eliminarProveedorAsync(id, null);
        }
        
        /// <remarks/>
        public void eliminarProveedorAsync(int id, object userState) {
            if ((this.eliminarProveedorOperationCompleted == null)) {
                this.eliminarProveedorOperationCompleted = new System.Threading.SendOrPostCallback(this.OneliminarProveedorOperationCompleted);
            }
            this.InvokeAsync("eliminarProveedor", new object[] {
                        id}, this.eliminarProveedorOperationCompleted, userState);
        }
        
        private void OneliminarProveedorOperationCompleted(object arg) {
            if ((this.eliminarProveedorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.eliminarProveedorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eliminarventa", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void eliminarventa(int id) {
            this.Invoke("eliminarventa", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void eliminarventaAsync(int id) {
            this.eliminarventaAsync(id, null);
        }
        
        /// <remarks/>
        public void eliminarventaAsync(int id, object userState) {
            if ((this.eliminarventaOperationCompleted == null)) {
                this.eliminarventaOperationCompleted = new System.Threading.SendOrPostCallback(this.OneliminarventaOperationCompleted);
            }
            this.InvokeAsync("eliminarventa", new object[] {
                        id}, this.eliminarventaOperationCompleted, userState);
        }
        
        private void OneliminarventaOperationCompleted(object arg) {
            if ((this.eliminarventaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.eliminarventaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eliminarcompra", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void eliminarcompra(int id) {
            this.Invoke("eliminarcompra", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void eliminarcompraAsync(int id) {
            this.eliminarcompraAsync(id, null);
        }
        
        /// <remarks/>
        public void eliminarcompraAsync(int id, object userState) {
            if ((this.eliminarcompraOperationCompleted == null)) {
                this.eliminarcompraOperationCompleted = new System.Threading.SendOrPostCallback(this.OneliminarcompraOperationCompleted);
            }
            this.InvokeAsync("eliminarcompra", new object[] {
                        id}, this.eliminarcompraOperationCompleted, userState);
        }
        
        private void OneliminarcompraOperationCompleted(object arg) {
            if ((this.eliminarcompraCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.eliminarcompraCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegistrarUsuario", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RegistrarUsuario(string nombre, string apellido, string cedula, string correo, string clave, char rol) {
            this.Invoke("RegistrarUsuario", new object[] {
                        nombre,
                        apellido,
                        cedula,
                        correo,
                        clave,
                        rol});
        }
        
        /// <remarks/>
        public void RegistrarUsuarioAsync(string nombre, string apellido, string cedula, string correo, string clave, char rol) {
            this.RegistrarUsuarioAsync(nombre, apellido, cedula, correo, clave, rol, null);
        }
        
        /// <remarks/>
        public void RegistrarUsuarioAsync(string nombre, string apellido, string cedula, string correo, string clave, char rol, object userState) {
            if ((this.RegistrarUsuarioOperationCompleted == null)) {
                this.RegistrarUsuarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegistrarUsuarioOperationCompleted);
            }
            this.InvokeAsync("RegistrarUsuario", new object[] {
                        nombre,
                        apellido,
                        cedula,
                        correo,
                        clave,
                        rol}, this.RegistrarUsuarioOperationCompleted, userState);
        }
        
        private void OnRegistrarUsuarioOperationCompleted(object arg) {
            if ((this.RegistrarUsuarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegistrarUsuarioCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/actualizarCliente", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void actualizarCliente(string nombre, string apellido, string cedula, string correo, string clave, char rol, int id) {
            this.Invoke("actualizarCliente", new object[] {
                        nombre,
                        apellido,
                        cedula,
                        correo,
                        clave,
                        rol,
                        id});
        }
        
        /// <remarks/>
        public void actualizarClienteAsync(string nombre, string apellido, string cedula, string correo, string clave, char rol, int id) {
            this.actualizarClienteAsync(nombre, apellido, cedula, correo, clave, rol, id, null);
        }
        
        /// <remarks/>
        public void actualizarClienteAsync(string nombre, string apellido, string cedula, string correo, string clave, char rol, int id, object userState) {
            if ((this.actualizarClienteOperationCompleted == null)) {
                this.actualizarClienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactualizarClienteOperationCompleted);
            }
            this.InvokeAsync("actualizarCliente", new object[] {
                        nombre,
                        apellido,
                        cedula,
                        correo,
                        clave,
                        rol,
                        id}, this.actualizarClienteOperationCompleted, userState);
        }
        
        private void OnactualizarClienteOperationCompleted(object arg) {
            if ((this.actualizarClienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.actualizarClienteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eliminarUsuario", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void eliminarUsuario(int id) {
            this.Invoke("eliminarUsuario", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void eliminarUsuarioAsync(int id) {
            this.eliminarUsuarioAsync(id, null);
        }
        
        /// <remarks/>
        public void eliminarUsuarioAsync(int id, object userState) {
            if ((this.eliminarUsuarioOperationCompleted == null)) {
                this.eliminarUsuarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OneliminarUsuarioOperationCompleted);
            }
            this.InvokeAsync("eliminarUsuario", new object[] {
                        id}, this.eliminarUsuarioOperationCompleted, userState);
        }
        
        private void OneliminarUsuarioOperationCompleted(object arg) {
            if ((this.eliminarUsuarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.eliminarUsuarioCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/cargarDatosUsuario", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet cargarDatosUsuario(string ci) {
            object[] results = this.Invoke("cargarDatosUsuario", new object[] {
                        ci});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void cargarDatosUsuarioAsync(string ci) {
            this.cargarDatosUsuarioAsync(ci, null);
        }
        
        /// <remarks/>
        public void cargarDatosUsuarioAsync(string ci, object userState) {
            if ((this.cargarDatosUsuarioOperationCompleted == null)) {
                this.cargarDatosUsuarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OncargarDatosUsuarioOperationCompleted);
            }
            this.InvokeAsync("cargarDatosUsuario", new object[] {
                        ci}, this.cargarDatosUsuarioOperationCompleted, userState);
        }
        
        private void OncargarDatosUsuarioOperationCompleted(object arg) {
            if ((this.cargarDatosUsuarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cargarDatosUsuarioCompleted(this, new cargarDatosUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void IngresarCompletedEventHandler(object sender, IngresarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IngresarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IngresarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void registrarProductoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void modificarProductoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void eliminarProductoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void registrarCategoriaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void actualizarCategoriaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void eliminarCategoriaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void registrarProveedorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void actualizarProveedorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void eliminarProveedorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void eliminarventaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void eliminarcompraCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RegistrarUsuarioCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void actualizarClienteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void eliminarUsuarioCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void cargarDatosUsuarioCompletedEventHandler(object sender, cargarDatosUsuarioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cargarDatosUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cargarDatosUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591